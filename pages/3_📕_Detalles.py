import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from streamlit_folium import folium_static
import folium

#PASO 00
#Cargamos la base de datos de pel√≠culas
#Lo cargamos como un DataFrame para acceder a √©l
df = pd.read_csv("Peliculas.csv")

#PASO 01 - Encabezado, mostramos el t√≠tulo al centro, mejora la est√©tica visual
st.markdown("<h1 style='text-align: center; color: #FF5733;'>Detalle de Pel√≠culas</h1>", unsafe_allow_html=True)

#PASO 02 - Sidebar para seleccionar cada una de las pel√≠culas
pelicula_seleccionada = st.sidebar.selectbox(
    "Selecciona una pel√≠cula:",
    df['T√≠tulo'].unique()
)
# Filtrar datos de la pel√≠cula seleccionada
datos_pelicula = df[df['T√≠tulo'] == pelicula_seleccionada].iloc[0]

# PASO 03 - Dise√±o del contenido principal
# Agregamos columnas para separar la informaci√≥n y permitir que la interfaz se vea ordenada
col1, col2 = st.columns([1, 2])

# Columna izquierda: Imagen y enlaces
with col1:
    #Agregamos la portada y los enlaces que redireccionen a las p√°ginas de fichas t√©cnicas y tr√°iler's
    st.image(datos_pelicula['Portada Imagen'], use_container_width=True)
    
    st.markdown(f"""
    <div style="text-align: center;">
        <a href="{datos_pelicula['URL - IMDb / FilmAffinity']}" target="_blank">
            <button style="background-color: #EFEFEF; color: black; padding: 10px 20px; border-radius: 5px; border: none; font-size: 16px; cursor: pointer;">
                üåê Ver en IMDb/FilmAffinity
            </button>
        </a>
    </div>
""", unsafe_allow_html=True)
    
    st.markdown(f"""
    <div style="text-align: center;">
        <a href="{datos_pelicula['Trailer']}" target="_blank">
            <button style="background-color: #EFEFEF; color: black; padding: 10px 20px; border-radius: 5px; border: none; font-size: 16px; cursor: pointer;">
                üìÄ Ver Tr√°iler
            </button>
        </a>
    </div>
 """, unsafe_allow_html=True)

# Columna derecha: Informaci√≥n detallada
with col2:
    # Crear un contenedor interactivo para toda la informaci√≥n
    with st.expander("üñπ Datos Generales", expanded=True):
        # Informaci√≥n de la pel√≠cula con estilo
        st.markdown(f"<p style='font-size: 16px; color: #008080;'>A√±o: <span style='color: #333'>{datos_pelicula['A√±o']}</span></p>", unsafe_allow_html=True)
        st.markdown(f"<p style='font-size: 16px; color: #8A2BE2;'>G√©nero: <span style='color: #333'>{datos_pelicula['G√©nero']}</span></p>", unsafe_allow_html=True)
        st.markdown(f"<p style='font-size: 16px; color: #FF6347;'>Duraci√≥n: <span style='color: #333'>{datos_pelicula['Tiempo (min)']} minutos</span></p>", unsafe_allow_html=True)
        st.markdown(f"<p style='font-size: 16px; color: #FFD700;'>Director: <span style='color: #333'>{datos_pelicula['Directores']}</span></p>", unsafe_allow_html=True)
        st.markdown(f"<p style='font-size: 16px; color: #20B2AA;'>Actores Protag√≥nicos: <span style='color: #333'>{datos_pelicula['Actores Protag√≥nicos']}</span></p>", unsafe_allow_html=True)

    # Resumen con una caja de texto destacada, dado en un contenedor colapsable
    with st.expander("üñπ Resumen", expanded=False):
        st.markdown(f"<p style='font-size: 16px; color: #333: <br><span style='color: #696969'>{datos_pelicula['Resumen']}</span></p>", unsafe_allow_html=True)


   # Aqu√≠ usamos un slider interactivo para las valoraciones de las pel√≠culas
    movie_key = f"rating_{datos_pelicula['T√≠tulo']}"

    # Inicializamos el valor en session_state solo si a√∫n no existe
    if movie_key not in st.session_state:
        st.session_state[movie_key] = 5  # Valor predeterminado (5 estrellas)

    # Mostrar un slider interactivo para la valoraci√≥n
    valoracion = st.slider(
        'Valoraci√≥n (de 1 a 5 estrellas)', 
        min_value=1, 
        max_value=5, 
        value=st.session_state[movie_key],  # Usamos el valor guardado en session_state
        key=movie_key  # Clave √∫nica para la pel√≠cula
    )

    # Actualizamos el valor en session_state solo si el slider fue movido
    if valoracion != st.session_state[movie_key]:
        st.session_state[movie_key] = valoracion

    # Mostrar la calificaci√≥n seleccionada en formato de estrellas
    st.markdown(f"Tu valoraci√≥n: {'‚≠ê' * valoracion}", unsafe_allow_html=True)

    #Con la valoraci√≥n, buscamos que el usuario interact√∫e con la plataforma, explicando los pasos: st.slider da un control ajustable a n√∫meros, y st.session_state mantiene el n√∫mero almacenado, es decir que, aunque cambie la pel√≠cula, el dato sifue guardado.
